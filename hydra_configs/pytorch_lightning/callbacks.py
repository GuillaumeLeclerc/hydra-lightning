# Autogenerated by configen, do not edit.
# If encountering an error, please file an issue @
# https://github.com/romesco/hydra-lightning 
# fmt: off
# isort: skip_file
# flake8: noqa
# Hydra + Lightning:


from dataclasses import dataclass
from typing import Optional
import pytorch_lightning as pl
from packaging import version
import importlib

def override_imports_for_legacy():
    if version.parse(pl.__version__) < version.parse("1.0.0"):
        module = importlib.import_module('hydra_configs.pytorch_lightning_v090.callbacks')
        globals().update(
            {n: getattr(module, n) for n in module.__all__} if hasattr(module, '__all__') else 
            {k: v for (k, v) in module.__dict__.items() if not k.startswith('_')}
        )


@dataclass
class EarlyStoppingConf:
    _target_: str = "pytorch_lightning.callbacks.EarlyStopping"
    monitor: str = "early_stop_on"
    min_delta: float = 0.0
    patience: int = 3
    verbose: bool = False
    mode: str = "auto"
    strict: bool = True


@dataclass
class ModelCheckpointConf:
    _target_: str = "pytorch_lightning.callbacks.ModelCheckpoint"
    filepath: Optional[str] = None
    monitor: Optional[str] = None
    verbose: bool = False
    save_last: Optional[bool] = None
    save_top_k: Optional[int] = None
    save_weights_only: bool = False
    mode: str = "auto"
    period: int = 1
    prefix: str = ""


@dataclass
class ProgressBarConf:
    _target_: str = "pytorch_lightning.callbacks.ProgressBar"
    refresh_rate: int = 1
    process_position: int = 0

override_imports_for_legacy()
